Index: src/components/openvidu/OpenviduComponent.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState, useEffect, useRef } from \"react\";\nimport { OpenVidu } from \"openvidu-browser\";\nimport OvVideo from \"./OvVideo\";\nimport { getToken } from \"../../../public/createToken.js\";\nimport { useRouter } from \"next/router\";\nimport { useRecoilState } from \"recoil\";\nimport { isRoomHostState } from \"../../recoil/states\";\nimport { currSessionId } from \"../../recoil/currSessionId\";\nimport { inroomState } from \"../../recoil/imroomState\";\nimport { gamePlayTime } from \"../../recoil/gamePlayTime\";\nimport SubVideo from \"./SubVideo\";\nimport Loading from \"../Loading\";\nimport dynamic from \"next/dynamic\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import { currSessionId } from \"../CreateRoomModal\";\nimport { enterRoomSessionId } from \"@/pages/room\";\nimport Swal from \"sweetalert2\"; \nimport MultiGameResultWin from \"../MultiGameResult\";\nimport MultiGameResultLose from \"../MultiGameResultLose\";\n\n\nexport let isLeftPlayerThrow = false;\nexport let isLeftPlayerMoveGuildLine = false;\nexport let isRightPlayerThrow = false;\nexport let isRightPlayerMoveGuildLine = false;\nexport let mySquart = 0;\nexport let heSquart = 0;\n\nexport let amIHost = false;\nexport let isOtherPlayerReady = false;\nexport let isPhaserGameStart = false;\nexport let gameTimePassed = 0;\nexport let gameTimeTotal;\n\nconst DynamicComponentWithNoSSR = dynamic(() => import(\"../MultiGame/Index\"), {\n    ssr: false,\n});\n\nexport function sendSignalThrow(session) {\n    console.log(session);\n    if (session) {\n        session\n            .signal({\n                data: `${localStorage.getItem(\"username\")}`, // Any string (optional)\n                to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n                type: \"throw\", // The type of message (optional)\n            })\n            .then(() => {\n                console.log(\"Throw !!! Message successfully sent\");\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n}\n\nexport function sendSignalJumpingJacks(session) {\n    if (session) {\n        session\n            .signal({\n                data: `${localStorage.getItem(\"username\")}`, // Any string (optional)\n                to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n                type: \"jumpingJacks\", // The type of message (optional)\n            })\n            .then(() => {\n                console.log(\"Message successfully sent\");\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n}\n\nexport default function OpenViduComponent({\n    roomName,\n    userName,\n    jwtToken,\n    children,\n    setIsMovenetLoaded,\n    setIsOpenViduLoaded\n}) {\n\n    const [loading, setLoading] = useState(false);\n    const API_URL = process.env.NEXT_PUBLIC_API_URL;\n\n    const [currSession, setCurrSession] = useRecoilState(currSessionId);\n    const [myInRoomState, setInRoomState] = useRecoilState(inroomState);\n\tconst [timeOfGamePlay, setTimeOfGamePlay] = useRecoilState(gamePlayTime);\n\n    const userIdRef = useRef(\"\");\n\n    useEffect(() => {\n        if (window) userIdRef.current = localStorage.getItem(\"username\");\n    }, [userIdRef.current]);\n\n    useEffect(() => {\n        setLoading(true);\n    }, []);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        window.history.pushState(null, null, document.URL);\n        window.addEventListener('popstate', onBackButtonEvent);\n        return () => {\n            window.removeEventListener('popstate', onBackButtonEvent);\n        };\n    }, []);\n\n    function onBackButtonEvent(e) {\n        e.preventDefault();\n        window.history.pushState(null, null, document.URL);\n    }\n\n    useEffect(() => {\n        function handleResize() {\n            setHeight(window.innerHeight);\n        }\n\n        handleResize(); // 초기화\n        window.addEventListener(\"resize\", handleResize);\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n\n    // 1) OV 오브젝트 생성\n    const [OV, setOV] = useState(null);\n    const [session, setSession] = useState(undefined);\n    const [publisher, setPublisher] = useState(undefined);\n    const [subscribers, setSubscribers] = useState([]);\n\n    const router = useRouter();\n    const [isRoomHost, setIsRoomHost] = useRecoilState(isRoomHostState);\n    const currentVideoDeviceRef = useRef(null);\n\n\tconst [isWinModalOpen, setIsWinModalOpen] = useState(false);\n\tconst [isLoseModalOpen, setIsLoseModalOpen] = useState(false);\n\n\tconst [isMoveNetStart, setIsMoveNetStart] = useState(false);\n\n\tconst [isModalClose, setIsModalClose] = useState(false);\n\n    const [isIWinning, setIsIWinning] = useState(\"\");\n    const [isRWinning, setIsRWinning] = useState(\"\");\n\n  let isClicked = false;\n  let isAllReady = true;\n  let isRoomOutBtnClicked = false\n  let gameTimer;\n  let gameStartTime;\n  let gameCurrTime;\n\n  const [ rightUserName, setRightUserName ] = useState(\"\");\n\n    useEffect(() => {\n        joinSession();\n        if (myInRoomState === 1) {\n            const targetBtn = document.getElementById(\"buttonGameReady\");\n            targetBtn.style.display = \"none\";\n        } else if (myInRoomState === 2) {\n            const targetBtn = document.getElementById(\"buttonGameStart\");\n            targetBtn.style.display = \"none\";\n        }\n\t\tconst targetStringVS = document.getElementById(\"stringVS\");\n\t\ttargetStringVS.style.display = \"none\";\n        // console.log(\"myInRoomState : \" + myInRoomState);\n        // isClicked = false;\n        return () => {\n            // if (!isClicked) leaveSession();\n        };\n    }, []);\n\n    useEffect(() => {\n        window.history.pushState(null, null, document.URL);\n        window.addEventListener('popstate', onBackButtonEvent);\n        return () => {\n            window.removeEventListener('popstate', onBackButtonEvent);\n        };\n    }, []);\n    function onBackButtonEvent(e) {\n        e.preventDefault();\n        window.history.pushState(null, null, document.URL);\n    }\n\n\tuseEffect(() => {\n\t\tif (isModalClose) {\n\t\t\tleaveSession();\n\t\t}\n\t}, [isModalClose]);\n\n    const onbeforeunload = (event) => {\n        leaveSession();\n    };\n\n    const deleteSubscriber = (streamManager) => {\n        let newSubscribers = [...subscribers];\n        setSubscribers(newSubscribers.filter((v) => v !== streamManager));\n    };\n\n    const leaveSession = async () => {\n        const mySession = session;\n\n        try {\n            // const assessToken = Cookies.get(\"token\");\n            const roomId = currSession;\n            console.log(\"this is levea room session !!! \" + roomId);\n            const response = await axios.post(API_URL + `/leave/${roomId}`, {\n                userId: userIdRef.current,\n            });\n            console.log(response.data);\n            switch (response.data) {\n                case \"deleteRoom\":\n                    // message : 방 다 나가\n                    allLeaveSession();\n\n                    break;\n                default:\n                    //   alert(response.data);\n                    if (mySession) {\n                        mySession.disconnect();\n                        setOV(null);\n                        setSession(undefined);\n                        setSubscribers([]);\n                        setPublisher(undefined);\n                        router.push(`/room`);\n                    }\n                    // disconnect Session\n                    break;\n            }\n        } catch (error) {\n            console.log(error);\n            const { response } = error;\n            if (response) {\n                switch (response.status) {\n                    case 404:\n                        // alert(response.data);\n                        console.log(response.data);\n                        break;\n                    case 501:\n                        // alert(response.data);\n                        console.log(response.data);\n                        break;\n                    default:\n                        // alert(\"Unexpected Error\");\n                        console.log(\"Unexpected Error\");\n                }\n            }\n        }\n    };\n\n    // 세션이 생성 됐을 때,\n    useEffect(() => {\n        if (session !== undefined) {\n            let mySession = session;\n\t\t\tgameTimeTotal = timeOfGamePlay;\n\t\t\tconsole.log(\"Phaser 에게 넘겨주는 시간 : \" + gameTimeTotal);\n\n            mySession.on(\"streamCreated\", (event) => {\n                var newsubscriber = mySession.subscribe(event.stream, undefined);\n                setSubscribers((curr) => [...curr, newsubscriber]);\n\t\t\t\tsendSignalInRoom();\n            });\n\n            mySession.on(\"connectionCreated\", (event) => {\n                console.log(event.connection);\n            });\n\n            mySession.on(\"streamDestroyed\", (event) => {\n                // if (!isRoomHost.isHost) {\n                //     leaveSession();\n                // }\n                deleteSubscriber(event.stream.streamManager);\n            });\n\n\t\t\tmySession.on(\"signal:inRoom\", (event) => {\n\t\t\t\tif (event.data !== localStorage.getItem(\"username\")) {\n\t\t\t\t\tsetRightUserName(event.data);\n\t\t\t\t\tconsole.log(\"상대 User Name !!!\" + rightUserName);\n\t\t\t\t}\n            });\n\n            // On every asynchronous exception...\n            mySession.on(\"signal:throw\", (event) => {\n                if (event.data === localStorage.getItem(\"username\")) {\n                    // alert(\"I throw !!!\");\n                    isLeftPlayerThrow = true;\n                    mySquart += 1;\n                    console.log(\"my count : \" + mySquart);\n                    setIsIWinning(\"Squat !!!\");\n                    setTimeout(function () {\n                        isLeftPlayerThrow = false;\n                        setIsIWinning(\"\");\n                    }, 300);\n                } else {\n                    isRightPlayerThrow = true;\n                    heSquart += 1;\n                    console.log(\"he count : \" + heSquart);\n                    setIsRWinning(\"Squat !!!\")\n                    setTimeout(function () {\n                        isRightPlayerThrow = false;\n                        setIsRWinning(\"\")\n                    }, 300);\n                }\n                // if(mySquart >= heSquart) {\n                //     setIsIWinning(\"Squat !!!\");\n                //     setIsRWinning(\"\");\n                // } else {\n                //     setIsIWinning(\"\");\n                //     setIsRWinning(\"Squat !!!\")\n                // }\n            });\n\n            mySession.on(\"signal:jumpingJacks\", (event) => {\n                if (event.data === localStorage.getItem(\"username\")) {\n                    //   console.log(\"my character jumping jacks !!!\");\n                    isLeftPlayerMoveGuildLine = true;\n                    setTimeout(function () {\n                        isLeftPlayerMoveGuildLine = false;\n                    }, 100);\n                } else {\n                    //   console.log(\"enemy character attack jumping jacks !!!\");\n                    isRightPlayerMoveGuildLine = true;\n                    setTimeout(function () {\n                        isRightPlayerMoveGuildLine = false;\n                    }, 100);\n                }\n            });\n\n            mySession.on(\"signal:allLeaveSession\", (event) => {\n                // 추후 삭제 예정\n                // alert(\"방장이 방나감\");\n                console.log(event.from);\n                sendSurverLeaveSession();\n                leaveSession();\n\n                Swal.fire({\n                    title: '방장이 나갔습니다',\n                    icon: 'warning',\n                });\n            });\n\n            mySession.on(\"start\", (event) => {\n                // Phaser 시작\n                isPhaserGameStart = true;\n\t\t\t\tsetIsMoveNetStart(true);\n                console.log(\"isPhaserGameStart : \" + isPhaserGameStart);\n\n\t\t\t\tconst targetBtnReady = document.getElementById(\"buttonGameReady\");\n      \t\t\ttargetBtnReady.style.display = \"none\";\n\t  \t\t\tconst targetBtnStart = document.getElementById(\"buttonGameStart\");\n      \t\t\ttargetBtnStart.style.display = \"none\";\n\t\t\t\t// const targetBtnLeave = document.getElementById(\"buttonLeaveRoom\");\n\t\t\t\t// targetBtnLeave.style.display = \"none\";\n\n                const targetStringRoomTitle = document.getElementById(\"room-title\");\n\t\t\t\ttargetStringRoomTitle.style.display = \"none\";\n\n\t\t\t\tconst targetStringVS = document.getElementById(\"stringVS\");\n\t\t\t\ttargetStringVS.style.display = \"block\";\n\n\t\t\t\tmySquart = 0;\n\t\t\t\theSquart = 0;\n\n\t\t\t\tgameStartTime = new Date;\n\t\t\t\tgameTimer = setInterval(setTimePassed, 1000);\n            });\n\n            mySession.on(\"end\", (event) => {\n                // Phaser 종료\n                console.log(\"PhaserGameEnd : \" + event.data);\n                // alert(\"PhaserGameEnd : \" + event.data);\n\t\t\t\tclearInterval(gameTimer);\n\t\t\t\t// handleOpenWinModal();\n\t\t\t\tif (mySquart >= heSquart) {\n\t\t\t\t\thandleOpenWinModal();\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenLoseModal();\n\t\t\t\t}\n            });\n\n      \t\tmySession.on(\"signal:otherPlayerReady\", (event) => {\n\t\t\t\tisAllReady = true;\n\t\t\t\tisOtherPlayerReady = true;\n\t\t\t\tsetRightUserName(event.data);\n\t\t\t\tconsole.log(\"OtherPlayerReady !!!\" + rightUserName);\n\n\t\t\t\tconst targetBtnStart = document.getElementById(\"buttonGameStart\");\n\t\t\t\ttargetBtnStart.style.display = \"block\";\n\t\t\t});\n\n            // On every asynchronous exception...\n            mySession.on(\"exception\", (exception) => {\n                console.warn(exception);\n            });\n\n            getToken(roomName, jwtToken).then((token) => {\n                mySession\n                    .connect(token, { clientData: userName })\n                    .then(async () => {\n                        let publisher = await OV.initPublisherAsync(undefined, {\n                            audioSource: undefined, // The source of audio. If undefined default microphone\n                            videoSource: undefined, // The source of video. If undefined default webcam\n                            publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\n                            publishVideo: true, // Whether you want to start publishing with your video enabled or not\n                            resolution: \"500x800\", // 비율 정하기 The resolution of your video\n                            frameRate: 30, // The frame rate of your video\n                            insertMode: \"APPEND\", // How the video is inserted in the target element 'video-container'\n                            mirror: false, // Whether to mirror your local video or not\n                        });\n\n                        mySession.publish(publisher);\n\n                        var devices = await OV.getDevices();\n                        var videoDevices = devices.filter(\n                            (device) => device.kind === \"videoinput\"\n                        );\n                        var currentVideoDeviceId = publisher.stream\n                            .getMediaStream()\n                            .getVideoTracks()[0]\n                            .getSettings().deviceId;\n                        var currentVideoDevice = videoDevices.find(\n                            (device) => device.deviceId === currentVideoDeviceId\n                        );\n\n                        currentVideoDeviceRef.current = currentVideoDevice;\n                        setPublisher(publisher);\n                    })\n                    .catch((error) => {\n                        console.log(\n                            \"There was an error connecting to the session:\",\n                            error.code,\n                            error.message\n                        );\n                    });\n            });\n        }\n    }, [session]);\n\n    const joinSession = async () => {\n        let newOV = new OpenVidu();\n        setOV(newOV);\n        newOV.enableProdMode();\n\n        // 2) session 초기화 -> useEffect 호출\n        setSession(newOV.initSession());\n    };\n\n    const callLeaveSession = () => {\n        isClicked = true;\n        leaveSession();\n    };\n\n    const allLeaveSession = () => {\n        if (session) {\n            console.log(\"allLeaveSession\");\n            session\n                .signal({\n                    data: \"baba\",\n                    to: [],\n                    type: \"allLeaveSession\",\n                })\n                .then(() => {\n                    console.log(\"Message successfully sent\");\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    const sendSurverLeaveSession = async () => {\n        const roomId = currSession;\n        console.log(roomId);\n        const assessToken = Cookies.get(\"token\");\n        try {\n            const response = await axios.get(API_URL + `/destroy/${roomId}`, {\n                headers: { Authorization: `Bearer ${assessToken}` },\n            });\n            session.disconnect();\n            setOV(null);\n            setSession(undefined);\n            setSubscribers([]);\n            setPublisher(undefined);\n            router.push(`/room`);\n        } catch (error) {\n            console.log(\"Unexpected Error\");\n        }\n    };\n\n\tfunction sendSignalInRoom() {\n        if (session) {\n            console.log(\"sendSignalInRoom\");\n            session.signal({\n                data: `${localStorage.getItem('username')}`,\n                to: [],\n                type: 'inRoom'\n            })\n                .then(() => {\n                    console.log('Message successfully sent');\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        }\n    }\n\n  const gameStart = async () => {\n\tif (isAllReady) {\n    \tconst roomId = currSession;\n    \tconst assessToken = Cookies.get(\"token\");\n    \ttry {\n\t\t\tconsole.log(roomId);\n      \t\tconst response = await axios.get(API_URL + `/game/${roomId}`, {\n        \theaders: { Authorization: `Bearer ${assessToken}` },\n      \t});\n    \t} catch (error) {\n      \t\tconsole.log(error);\n    \t}\n\t}\n  };\n  const gameReady = () => {\n    if (session) {\n      session\n        .signal({\n          data: `${localStorage.getItem(\"username\")}`,\n          to: [],\n          type: \"otherPlayerReady\",\n        })\n        .then(() => {\n          console.log(\"Message successfully sent\");\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  const setTimePassed = () => {\n\tvar gameCurrTime = new Date();\n\t// var hours = now.getHours();\n\t// var minutes = now.getMinutes();\n\t// var seconds = now.getSeconds();\n\t// gameStartTime = (hours*3600) + (minutes*60) + seconds;\n\tgameTimePassed = Math.floor((gameCurrTime.getTime() - gameStartTime.getTime()) / 1000);\n\t\n\tconsole.log(\"지난 시간 : \", gameTimePassed);\n\n\tif (gameTimePassed + 5 > gamePlayTime) {\n\t\tconsole.log(\"SetTimePassed 에서 게임이 끝나따 !!! \");\n\t\tclearInterval(gameTimer);\n\t\tif (mySquart >= heSquart) {\n\t\t\thandleOpenWinModal();\n\t\t} else {\n\t\t\thandleOpenLoseModal();\n\t\t}\n\t}\n  };\n\n  const handleOpenWinModal = () => {\n    setIsWinModalOpen(true);\n  }\n  const handleCloseWinModal = () => {\n    setIsWinModalOpen(false);\n  };\n  const handleOpenLoseModal = () => {\n    setIsLoseModalOpen(true);\n  }\n  const handleCloseLoseModal = () => {\n    setIsLoseModalOpen(false);\n  };\n\n    return (\n        <div className=\"video-container\">\n\n\n            <div>\n                {/* <div>\n          {session && publisher !== undefined ? (\n            <div id=\"session\">\n              {publisher !== undefined ? (\n                <div\n                  id=\"main-video\"\n                  style={{ position: \"static\", top: \"30px\", left: \"30px\" }}\n                >\n                  <OvVideo\n                    streamManager={publisher}\n                    userName={userName}\n                    session={session}\n                  />\n                </div>\n              ) : (\n                <Loading />\n              )}\n            </div>\n          ) : null}\n        </div> */}\n\n        <div id=\"game-container\">\n\t\t\n            {session !== undefined ? (\n                <div id=\"session\">\n                {publisher !== undefined ? (\n                    <div\n                    id=\"main-video\"\n                    style={{ position: \"absolute\", top: \"0px\", bottom:\"140px\", left: \"0px\", right: \"1370px\" ,width: \"500px\", height: \"800px\" }}\n                    >\n                    <OvVideo\n                        streamManager={publisher}\n                        userName={userName}\n                        session={session}\n                        setIsOpenViduLoaded={setIsOpenViduLoaded}\n                        setIsMovenetLoaded={setIsMovenetLoaded}\n\t\t\t\t\t\tisMoveNetStart={isMoveNetStart}\n                    />\n                    </div>\n                ) : (\n                <Loading />\n                )}\n                </div>\n            ) : null}\n        \n            {loading ? <DynamicComponentWithNoSSR /> : null}\n\t\t\t\n\t\t\t<p id=\"room-title\" className=\"session-title\" style={{ position: \"absolute\", top: \"-20px\", left: \"950px\", fontSize: \"60px\" }}>{currSession}</p>\n\t\t\t<p id=\"stringVS\" className=\"stringVS\" style={{ position: \"absolute\", top: \"820px\", bottom:\"30px\", right: \"30px\", left: \"930px\", width: \"250px\", height: \"100px\", fontSize: \"60px\" }}>VS</p>\n\t\t\t<span className=\"user-name\" style={{ position: \"absolute\", top: \"700px\", left: \"100px\" }}>{userName}</span>\n\t\t\t<span className=\"user-name\" style={{ position: \"absolute\", top: \"700px\", right: \"140px\" }}>{rightUserName}</span>\n            <button\n                style={{ position: \"absolute\", top: \"830px\", left: \"830px\" }}\n                className=\"buttonGameStart\"\n                id=\"buttonGameStart\"\n                onClick={gameStart}\n            >\n                <span>시작</span>\n            </button>\n            <button\n                style={{ position: \"absolute\", top: \"830px\", left: \"830px\" }}\n                className=\"buttonGameReady\"\n                id=\"buttonGameReady\"\n                onClick={gameReady}\n            >\n                <span>준비</span>\n            </button>\n\t\t\t<button\n                style={{ position: \"absolute\", top: \"830px\", bottom:\"30px\", right: \"30px\", left: \"1150px\", width: \"250px\", height: \"100px\", fontSize: \"50px\", color: \"white\", backgroundColor: \"red\", borderRadius: \"20px\" }}\n                className=\"buttonLeaveRoom\"\n                id=\"buttonLeaveRoom\"\n                onClick={callLeaveSession}\n            >\n                방나가기\n            </button>\n        </div>\n\n        <div>\n          {subscribers.map((sub, i) => (\n            <div\n              key={i}\n              style={{ position: \"absolute\", top: \"0px\", bottom:\"200px\", right: \"0px\", left: \"1400px\", width: \"500px\", height: \"800px\" }}\n            >\n              <SubVideo streamManager={sub} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <p className=\"leftWinning\" style={{ position: \"absolute\", top: \"600px\", left: \"100px\", width: \"400px\", height: \"200px\" }}>{isIWinning}</p>\n      <p className=\"leftWinning\" style={{ position: \"absolute\", top: \"600px\", left: \"1500px\", width: \"400px\", height: \"200px\" }}>{isRWinning}</p>\n\n\t  \t\t{/* <div className=\"nav-bar flex justify-center align-center\" style={{ position: \"absolute\", top: \"800px\", bottom:\"30px\", right: \"30px\", left: \"1400px\", width: \"300px\", height: \"100px\" }}>\n        \t\t<div className=\"contents-box flex flex-inline justify-center align-center\">\n          \t\t\t<p className=\"session-title\">{roomName}</p>\n          \t\t\t<button\n            \t\t\tclassName=\"\"\n            \t\t\tid=\"buttonLeaveSession\"\n            \t\t\tonClick={callLeaveSession}\n          \t\t\t>\n            \t\t\t방 나가기\n          \t\t\t</button>\n        \t\t</div>\n      \t\t</div> */}\n\n\t\t\t{isWinModalOpen && <MultiGameResultWin roomId={currSession} name={userName} setIsWinModalOpen={setIsWinModalOpen} setIsModalClose={setIsModalClose}/>}\n\t\t\t{isLoseModalOpen && <MultiGameResultLose setIsWinModalOpen={setIsLoseModalOpen} setIsModalClose={setIsModalClose} />}\n\t\t\t\n            <style jsx>{`\n                .video-container{\n                }\n\n                .nav-bar{\n                    height: 60px;\n                    background-color: #12DEFF;\n                    width: 680px;\n                    margin: 0px auto;\n                    border-bottom-left-radius: 10px;\n                    border-bottom-right-radius: 10px;\n                    box-shadow: 1px 1px 1px 1px;\n                }\n                .session-title{\n                    position: absolute;\n                    left: 10px;\n                    top 50%;\n                    left: 70px;\n                    transform: translate(-50%, 50%);\n                    font-size: 18px;\n                    align-items: center;\n                    color: white;\n                }\n\n\t\t\t\t.user-name {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tfont-size: 150px;\n\t\t\t\t\tbackground-color: ;\n\t\t\t\t}\n\n\t\t\t\t.stringVS {\n\t\t\t\t\t\n\t\t\t\t}\n\n                .contents-box{\n                    position: relative;\n                    margin-top: 5px;\n                    background-color: #0ABDFF;\n                    width: 660px;\n                    height: 50px;\n                    border-radius: 10px; \n                }\n\n                .leftWinning {\n                    color: red;\n                    font-size: 80px;\n                }\n                \n\t\t\t\t.buttonGameStart {\n\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tbackground-color: red;\n\t\t\t\t\twidth: 250px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\tborder-radius: 20px; \n\t\t\t\t\t// border: 3px solid black;\n\t\t\t\t}\n\t\t\t\t.buttonGameStart {\n\t\t\t\t\tbackground: linear-gradient(0deg, rgba(244, 123, 123, 1) 0%, rgba(238, 47, 47, 1) 100%);\n\t\t\t\t\tfont-size: 50px;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\twidth: 250px;\n\t\t\t\t\theight: 100px;\n\t\t\t\t\t  line-height: 42px;\n\t\t\t\t\t  padding: 0;\n\t\t\t\t\t  border: none;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span {\n\t\t\t\t\t\tline-height: 100px;\n\t\t\t\t\t  position: relative;\n\t\t\t\t\t  display: block;\n\t\t\t\t\t  width: 100%;\n\t\t\t\t\t  height: 100%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:before,\n\t\t\t\t\t.buttonGameStart:after {\n\t\t\t\t\t  position: absolute;\n\t\t\t\t\t  content: \"\";\n\t\t\t\t\t  right: 0;\n\t\t\t\t\t  bottom: 0;\n\t\t\t\t\t  background: rgba(238, 47, 47, 1);\n\t\t\t\t\t  box-shadow:\n\t\t\t\t\t   -7px -7px 20px 0px rgba(255,255,255,.9),\n\t\t\t\t\t   -4px -4px 5px 0px rgba(255,255,255,.9),\n\t\t\t\t\t   7px 7px 20px 0px rgba(0,0,0,.2),\n\t\t\t\t\t   4px 4px 5px 0px rgba(0,0,0,.3);\n\t\t\t\t\t  transition: all 0.3s ease;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:before{\n\t\t\t\t\t   height: 0%;\n\t\t\t\t\t   width: 2px;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:after {\n\t\t\t\t\t  width: 0%;\n\t\t\t\t\t  height: 2px;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:hover{\n\t\t\t\t\t  color: rgba(238, 47, 47, 1);\n\t\t\t\t\t//   background: transparent;\n                        background: white;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:hover:before {\n\t\t\t\t\t  height: 100%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart:hover:after {\n\t\t\t\t\t  width: 100%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span:before,\n\t\t\t\t\t.buttonGameStart span:after {\n\t\t\t\t\t  position: absolute;\n\t\t\t\t\t  content: \"\";\n\t\t\t\t\t  left: 0;\n\t\t\t\t\t  top: 0;\n\t\t\t\t\t  background: rgba(238, 47, 47, 1);\n\t\t\t\t\t  box-shadow:\n\t\t\t\t\t   -7px -7px 20px 0px rgba(255,255,255,.9),\n\t\t\t\t\t   -4px -4px 5px 0px rgba(255,255,255,.9),\n\t\t\t\t\t   7px 7px 20px 0px rgba(0,0,0,.2),\n\t\t\t\t\t   4px 4px 5px 0px rgba(0,0,0,.3);\n\t\t\t\t\t  transition: all 0.3s ease;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span:before {\n\t\t\t\t\t  width: 2px;\n\t\t\t\t\t  height: 0%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span:after {\n\t\t\t\t\t  height: 2px;\n\t\t\t\t\t  width: 0%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span:hover:before {\n\t\t\t\t\t  height: 100%;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameStart span:hover:after {\n\t\t\t\t\t  width: 100%;\n\t\t\t\t\t}\n\n\t\t\t\t\t.buttonGameReady {\n\t\t\t\t\t\tfont-size: 40px;\n\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t\tbackground-color: red;\n\t\t\t\t\t\twidth: 250px;\n\t\t\t\t\t\theight: 100px;\n\t\t\t\t\t\tborder-radius: 20px; \n\t\t\t\t\t\t// border: 3px solid black;\n\t\t\t\t\t}\n\t\t\t\t\t.buttonGameReady {\n\t\t\t\t\t\tbackground: linear-gradient(0deg, rgba(244, 123, 123, 1) 0%, rgba(238, 47, 47, 1) 100%);\n\t\t\t\t\t\tfont-size: 50px;\n\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t\twidth: 250px;\n\t\t\t\t\t\theight: 100px;\n\t\t\t\t\t\t  line-height: 42px;\n\t\t\t\t\t\t  padding: 0;\n\t\t\t\t\t\t  border: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span {\n\t\t\t\t\t\t\tline-height: 100px;\n\t\t\t\t\t\t  position: relative;\n\t\t\t\t\t\t  display: block;\n\t\t\t\t\t\t  width: 100%;\n\t\t\t\t\t\t  height: 100%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:before,\n\t\t\t\t\t\t.buttonGameReady:after {\n\t\t\t\t\t\t  position: absolute;\n\t\t\t\t\t\t  content: \"\";\n\t\t\t\t\t\t  right: 0;\n\t\t\t\t\t\t  bottom: 0;\n\t\t\t\t\t\t  background: rgba(238, 47, 47, 1);\n\t\t\t\t\t\t  box-shadow:\n\t\t\t\t\t\t   -7px -7px 20px 0px rgba(255,255,255,.9),\n\t\t\t\t\t\t   -4px -4px 5px 0px rgba(255,255,255,.9),\n\t\t\t\t\t\t   7px 7px 20px 0px rgba(0,0,0,.2),\n\t\t\t\t\t\t   4px 4px 5px 0px rgba(0,0,0,.3);\n\t\t\t\t\t\t  transition: all 0.3s ease;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:before{\n\t\t\t\t\t\t   height: 0%;\n\t\t\t\t\t\t   width: 2px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:after {\n\t\t\t\t\t\t  width: 0%;\n\t\t\t\t\t\t  height: 2px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:hover{\n\t\t\t\t\t\t  color: rgba(238, 47, 47, 1);\n\t\t\t\t\t\t//   background: transparent;\n                            background: white;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:hover:before {\n\t\t\t\t\t\t  height: 100%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady:hover:after {\n\t\t\t\t\t\t  width: 100%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span:before,\n\t\t\t\t\t\t.buttonGameReady span:after {\n\t\t\t\t\t\t  position: absolute;\n\t\t\t\t\t\t  content: \"\";\n\t\t\t\t\t\t  left: 0;\n\t\t\t\t\t\t  top: 0;\n\t\t\t\t\t\t  background: rgba(238, 47, 47, 1);\n\t\t\t\t\t\t  box-shadow:\n\t\t\t\t\t\t   -7px -7px 20px 0px rgba(255,255,255,.9),\n\t\t\t\t\t\t   -4px -4px 5px 0px rgba(255,255,255,.9),\n\t\t\t\t\t\t   7px 7px 20px 0px rgba(0,0,0,.2),\n\t\t\t\t\t\t   4px 4px 5px 0px rgba(0,0,0,.3);\n\t\t\t\t\t\t  transition: all 0.3s ease;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span:before {\n\t\t\t\t\t\t  width: 2px;\n\t\t\t\t\t\t  height: 0%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span:after {\n\t\t\t\t\t\t  height: 2px;\n\t\t\t\t\t\t  width: 0%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span:hover:before {\n\t\t\t\t\t\t  height: 100%;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.buttonGameReady span:hover:after {\n\t\t\t\t\t\t  width: 100%;\n\t\t\t\t\t\t}\n\n\t\t\t\t// .buttonGameStart {\n\t\t\t\t// \tfont-size: 40px;\n\t\t\t\t// \tcolor: white;\n\t\t\t\t// \twidth: 250px;\n\t\t\t\t// \theight: 80px;\n\t\t\t\t// \tline-height: 42px;\n\t\t\t\t// \tpadding: 0;\n\t\t\t\t// \tborder: none;\n\t\t\t\t// \tborder-radius: 50px; \n\t\t\t\t// \tbackground: rgb(255,27,0);\n\t\t\t\t//   \tbackground: linear-gradient(0deg, rgba(255,27,0,1) 0%, rgba(238, 47, 47, 1) 100%);\n\t\t\t\t// }\n\t\t\t\t// .buttonGameStart:hover {\n\t\t\t\t// \tcolor: #f0094a;\n\t\t\t\t// \tbackground: transparent;\n\t\t\t\t// \tbox-shadow:none;\n\t\t\t\t// }\n\t\t\t\t// .buttonGameStart:before,\n\t\t\t\t// .buttonGameStart:after{\n\t\t\t\t// \tcontent:'';\n\t\t\t\t// \tposition:absolute;\n\t\t\t\t// \ttop:0;\n\t\t\t\t// \tright:0;\n\t\t\t\t// \theight:4px;\n\t\t\t\t// \twidth:0;\n\t\t\t\t// \tbackground: #f0094a;\n\t\t\t\t// \tbox-shadow:\n\t\t\t\t// \t\t-1px -1px 5px 0px #fff,\n\t\t\t\t// \t\t7px 7px 20px 0px #0003,\n\t\t\t\t// \t\t4px 4px 5px 0px #0002;\n\t\t\t\t// \t\ttransition:400ms ease all;\n\t\t\t\t// }\n\t\t\t\t// .buttonGameStart:after{\n\t\t\t\t// \tright:inherit;\n\t\t\t\t// \ttop:inherit;\n\t\t\t\t// \tleft:0;\n\t\t\t\t// \tbottom:0;\n\t\t\t\t// }\n\t\t\t\t// .buttonGameStart:hover:before,\n\t\t\t\t// .buttonGameStart:hover:after{\n\t\t\t\t// \twidth:100%;\n\t\t\t\t// \ttransition:800ms ease all;\n\t\t\t\t// }\n                `}</style>\n        </div>\n    );\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/openvidu/OpenviduComponent.js b/src/components/openvidu/OpenviduComponent.js
--- a/src/components/openvidu/OpenviduComponent.js	(revision 6be0b17b7d704be9696a2159994afc55b5cb5348)
+++ b/src/components/openvidu/OpenviduComponent.js	(date 1678108090963)
@@ -656,7 +656,7 @@
           {subscribers.map((sub, i) => (
             <div
               key={i}
-              style={{ position: "absolute", top: "0px", bottom:"200px", right: "0px", left: "1400px", width: "500px", height: "800px" }}
+              style={{ position: "absolute", top: "0px", bottom:"140px", right: "0px", left: "1370px", width: "500px", height: "800px" }}
             >
               <SubVideo streamManager={sub} />
             </div>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a01e5aff-28db-4ebc-8599-b18b979c5088\" name=\"변경\" comment=\"feat : 로그인 로직 롤백\">\n<<<<<<< HEAD\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/2023_02_25_4_25_PM,_체크아웃_전에_커밋되지_않은_변경_내용_[변경]/shelved.patch\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/2023_02_25_4_25_PM__________.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/components/MultiGame/Config.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/MultiGame/Config.js\" afterDir=\"false\" />\n=======\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/components/MultiGame/Config.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/MultiGame/Config.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/components/MultiGame2/Config.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/MultiGame2/Config.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/components/openvidu/OpenviduComponent.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/openvidu/OpenviduComponent.js\" afterDir=\"false\" />\n>>>>>>> b942e172d22a3009859c00bf92f06dd1b1c4f534\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n        <option value=\"CSS File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$PROJECT_DIR$/src/components/MultiGame/Index.js\" root0=\"SKIP_INSPECTION\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2MAmwD7BIRfzE9To9VOyjnl6N1q\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/woe3/Documents/GitHub/Front/public/assets/sound&quot;,\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;editing.templates&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/Applications/WebStorm.app/Contents/plugins/javascript-impl/jsLanguageServicesImpl/external&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/public/assets/sound\" />\n      <recent name=\"$PROJECT_DIR$/public/assets\" />\n      <recent name=\"$PROJECT_DIR$/public\" />\n      <recent name=\"$PROJECT_DIR$/public/assets/multigame2\" />\n      <recent name=\"$PROJECT_DIR$/public/assets/characters\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/public\" />\n      <recent name=\"$PROJECT_DIR$/public/assets/mulitgame2\" />\n      <recent name=\"$PROJECT_DIR$/public/assets/characters2\" />\n      <recent name=\"$PROJECT_DIR$/src/components/MultiGame2\" />\n      <recent name=\"$PROJECT_DIR$/public/assets\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\n      <changelist id=\"a01e5aff-28db-4ebc-8599-b18b979c5088\" name=\"변경\" comment=\"\" />\n      <created>1677218997842</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1677218997842</updated>\n      <workItem from=\"1677218998982\" duration=\"2697000\" />\n      <workItem from=\"1677223018002\" duration=\"14702000\" />\n      <workItem from=\"1677347038757\" duration=\"175000\" />\n      <workItem from=\"1677347221959\" duration=\"144000\" />\n      <workItem from=\"1677347373528\" duration=\"3556000\" />\n      <workItem from=\"1677393833193\" duration=\"6898000\" />\n      <workItem from=\"1677564465706\" duration=\"1767000\" />\n      <workItem from=\"1677566629772\" duration=\"19625000\" />\n      <workItem from=\"1677645821806\" duration=\"1910000\" />\n      <workItem from=\"1677681358285\" duration=\"8256000\" />\n      <workItem from=\"1677705494730\" duration=\"333000\" />\n      <workItem from=\"1677705832379\" duration=\"7882000\" />\n      <workItem from=\"1677746031692\" duration=\"5940000\" />\n      <workItem from=\"1677790135146\" duration=\"26671000\" />\n      <workItem from=\"1677907124404\" duration=\"8416000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"feat : JWT 쿠기 유/무로 페이지 접근제어 추가\">\n      <created>1677227365915</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1677227365915</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"feat : JWT 쿠기 삭제 함수 추가\">\n      <created>1677236429771</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1677236429771</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"feat : 로그아웃 버튼 활성화\">\n      <created>1677236464500</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1677236464500</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"feat : npm nookie 추가\">\n      <created>1677236488586</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1677236488586</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"feat : JWT 쿠기 유/무로 페이지 접근제어 추가\" />\n    <MESSAGE value=\"feat : JWT 쿠기 삭제 함수 추가\" />\n    <MESSAGE value=\"feat : 로그아웃 버튼 활성화\" />\n    <MESSAGE value=\"feat : npm nookie 추가\" />\n    <MESSAGE value=\"feat : 로그인 로직 롤백\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat : 로그인 로직 롤백\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6be0b17b7d704be9696a2159994afc55b5cb5348)
+++ b/.idea/workspace.xml	(date 1678108161763)
@@ -4,18 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a01e5aff-28db-4ebc-8599-b18b979c5088" name="변경" comment="feat : 로그인 로직 롤백">
-<<<<<<< HEAD
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/2023_02_25_4_25_PM,_체크아웃_전에_커밋되지_않은_변경_내용_[변경]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/2023_02_25_4_25_PM__________.xml" beforeDir="false" />
+    <list default="true" id="a01e5aff-28db-4ebc-8599-b18b979c5088" name="변경" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/MultiGame/Config.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/MultiGame/Config.js" afterDir="false" />
-=======
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/MultiGame/Config.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/MultiGame/Config.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/MultiGame2/Config.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/MultiGame2/Config.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/components/openvidu/OpenviduComponent.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/openvidu/OpenviduComponent.js" afterDir="false" />
->>>>>>> b942e172d22a3009859c00bf92f06dd1b1c4f534
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
