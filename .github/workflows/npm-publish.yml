# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: CI/CD Frond


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.2.0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: make env.production
        if: contains(github.ref, 'main') # branch가 main일 때
        run: | 

          #touch ./env.production # env.production 파일 생성 

          # GitHub-Actions에서 설정한 값을 /env.production 파일에 쓰기
          echo "${{ secrets.PRODUCTION }}" > .env.production
        shell: bash


      - name: Build
        run: yarn build

      - name: Docker build & push
        if: contains(github.ref, 'main')
        run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/mofit-front:latest .
            docker push ${{ secrets.DOCKER_REPO }}/mofit-front
      ## deploy to develop
      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
              cd ../home/ubuntu/mofit
              sudo docker rm -f $(docker ps -qa)
              sudo docker pull ${{ secrets.DOCKER_REPO }}/mofit-front
              docker-compose up -d
              docker image prune -f
